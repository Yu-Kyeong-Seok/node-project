<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/static/styles/common/header.css" />
    <link rel="stylesheet" href="/static/styles/common/footer.css"/>
    <link rel="stylesheet" href="/static/styles/common/reset.css"/>
    <link rel="stylesheet" href="/static/styles/profile/profileChangeNumbers.css" />

    <link
      rel="stylesheet"
      as="style"
      crossorigin
      href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script
      src="https://kit.fontawesome.com/5a10cda3a0.js"
      crossorigin="anonymous"
    ></script>

    <title>Document</title>
  </head>
  <body>
    <div class="page-container">
      <%- include('../_layouts/header') %>
      <div class="content">
        <div class="changeNumbers-container" id="form">
          <h2>비밀번호 재설정</h2>
          <div class="number-container">
            <div class="basic-number">
              <h3>새로운 비밀번호</h3>
              <input
                class="change"
                type="password"
                placeholder="Password"
                id="newPassword"
              />
            </div>
            <div class="strongPassword-message msg hide">
              대문자 1개 이상, 특수문자 포함 10글자 이내여야 합니다.
            </div>
            <div class="change-number">
              <h3 class="new-number">비밀번호 확인</h3>
              <input
                class="change"
                type="password"
                placeholder="Confirm Password"
                id="confirmPassword"
              />
            </div>
            <div class="mismatch-message msg hide">
              비밀번호가 일치하지 않습니다.
            </div>
          </div>

          <div class="button-bar">
            <button class="checkbutton cancleBtn">취소</button>
            <button class="checkbutton pupple completeBtn">확인</button>
          </div>
        </div>
      </div>

      <%- include('../_layouts/footer') %>
      <script>
        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("form");
            const newPassword = form.querySelector("#newPassword");
            const completeBtn = form.querySelector(".completeBtn");
            const cancleBtn = form.querySelector(".cancleBtn");
            const confirmPassword = form.querySelector("#confirmPassword");

            const mismatchMsg = form.querySelector(".mismatch-message");
            const strongPasswordMsg = form.querySelector(".strongPassword-message");

        cancleBtn.addEventListener("click", (e) => {
            e.preventDefault();

            location.href = "/profile/setting";
            });

        completeBtn.addEventListener("click", async (e) => {
            e.preventDefault();

            const pwValue = newPassword.value.trim();
            const confirmValue = confirmPassword.value.trim();

            if (pwValue === "" || confirmValue === "") {
              e.preventDefault(); // 폼 전송 중지
              alert("비밀번호를 입력해주세요.");
              return;
            }

            try {
                const cookies = document.cookie.split(";").reduce((acc, cookie) => {
                  const [key, value] = cookie.split("=");
                  acc[key.trim()] = decodeURIComponent(value);
                  return acc;
                }, {});
          
                const token = `${cookies.accessToken}`;
                const res = await fetch("/api/users/password", {
                method: "put",
                headers: {
                    "Content-Type": "application/json",
                    authorization: token,
                },
                body: JSON.stringify({
                    password: newPassword.value,
                    }),
                });

                if (!res.ok) {
                console.error("Error:", res.status, res.statusText);
                const errorText = await res.text(); // 오류 메시지 확인
                console.error("Response body:", errorText);
                }

                location.href = "/profile/setting";
            } catch (error) {
                console.error(error.message);
            }
        });

        //조건 미충족시 버튼 비활성화
        function handleInput() {

          const pwValue = newPassword.value.trim();
          const confirmValue = confirmPassword.value.trim();

          if (pwValue.length > 0 && confirmValue.length > 0) {
            completeBtn.disabled = false;
            completeBtn.style.backgroundColor = "#7E0DBD";
            completeBtn.style.cursor = "pointer";
          } else {
            completeBtn.disabled = true;
            completeBtn.style.backgroundColor = "gray";
            completeBtn.style.cursor = "not-allowed";
          }
        }
        newPassword.addEventListener("input", handleInput);
        confirmPassword.addEventListener("input", handleInput);

        //비번 유효성 검사
        newPassword.onkeyup = () => {
          if (newPassword.value.length !== 0) {
            if (strongPassword(newPassword.value)) {
              strongPasswordMsg.classList.add("hide");
            } else {
              strongPasswordMsg.classList.remove("hide");
            }
          }
          //값이 아예 없을때.
          else {
            strongPasswordMsg.classList.add("hide");
          }
        };

        //비밀번호 확인 검사
        confirmPassword.onkeyup = () => {
          if (confirmPassword.value.length !== 0) {
            if (isMatch(newPassword.value, confirmPassword.value)) {
              mismatchMsg.classList.add("hide");
            } else {
              mismatchMsg.classList.remove("hide");
            }
          } else {
            mismatchMsg.classList.add("hide");
          }
        };
        
      });

        $(document).ready(function () {
          $(".hamburger-bar").click(function () {
            $("#menu, .page_cover").addClass("open");
          });

          $(".page_cover, .close").click(function () {
            $("#menu, .page_cover").removeClass("open");
          });
        });

        // 비밀번호 검사 및 비교 코드 추가 필요
        // const phoneNumberInput = document.querySelector(".change");
        // const confirmButton = document.querySelector(".checkbutton.pupple");

        // phoneNumberInput.addEventListener("input", () => {
        //   if (phoneNumberInput.value.length >= 10) {
        //     confirmButton.disabled = false;
        //     confirmButton.style.backgroundColor = "purple";
        //   } else {
        //     confirmButton.disabled = true;
        //     confirmButton.style.backgroundColor = "rgb(177,163,245)";
        //   }
        // });

      function strongPassword(str) {
        return /^(?=.*[A-Z])(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{1,10}$/.test(
          str
        );
      }

      function isMatch(password1, password2) {
        return password1 === password2;
      }
      </script>
    </div>
  </body>
</html>
