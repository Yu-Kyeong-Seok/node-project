<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/static/styles/common/header.css" />
    <link rel="stylesheet" href="/static/styles/common/footer.css"/>
    <link rel="stylesheet" href="/static/styles/common/reset.css"/>
    <link rel="stylesheet" href="/static/styles/profile/profileEdit.css"/>
    <link rel="stylesheet" as="style" crossorigin href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://kit.fontawesome.com/5a10cda3a0.js" crossorigin="anonymous"></script>
    
    <title>Document</title>
</head>
<body>
    <div class="page-container">
        <%- include('../_layouts/header') %>
    <div class="content">
        <div class="profileEdit-container" id="form">
            <h1>멋진 프로필을 만들어보세요!</h1>
            <h2>가이드에 맞춰, 프로필을 완성해 주세요</h2>
            <label for="form">
                <img src="<%= user.profile.thumbnail %>" alt="profile" id="profile_thumbnail">
                <input type="file" id="filename" name="filename" hidden/>
            </label>
            <div class="textbox">
                <label for="nickName">닉네임</label>
                <input type="text" id="nickName" placeholder="닉네임을 입력해주세요" class="title" value="<%= user.profile.nickName %>">
                <br>
                <label for="greeting">인사말</label>
                <textarea type="text" id="greeting" placeholder="인사말을 입력해주세요." maxlength="60" rows="1"></textarea>
            </div>
            <div class="buttonbox">
                <button class="up cancle cancleBtn">취소</button>
                <button class="up save completeBtn" id="btnSave" type="submit">저장</button>
                <!-- <button class="up save completeBtn"><a href="/profile/Edit/<%= user.id %>" aria-disabled="true">저장</a></button> -->
            </div>
        </div>
    </div>
    <%- include('../_layouts/footer') %>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const form = document.getElementById("form");

            const nickName = form.querySelector("#nickName");
            const completeBtn = form.querySelector(".completeBtn");
            const cancleBtn = form.querySelector(".cancleBtn");
            const profileThumbnail = document.getElementById("profile_thumbnail");

            // 이미지 업로드
            const $form = document.querySelector("#form");
            const $filename = document.querySelector("#filename");
            const $profileThumbnail = document.getElementById("profile_thumbnail");

            // 업로드 버튼이 사라짐 -> 이미지를 클릭했을때, 파일 선택을 띄워준다
            $profileThumbnail.addEventListener("click", () => {
                $filename.click();
            });

            // input file이 바뀌는걸 감지한다.
            $filename.addEventListener("change", (e) => {
                const file = e.target.files[0];
                // 업로드되어있는 이미지로 src를 교체한다.
                $profileThumbnail.src = URL.createObjectURL(file);
                $profileThumbnail.onload = function () {
                URL.revokeObjectURL($profileThumbnail.src);
                };
            });

            cancleBtn.addEventListener("click", (e) => {
            e.preventDefault();

            location.href = "/profile/<%= user.id %>";
            });

            completeBtn.addEventListener("click", async (e) => {
            e.preventDefault();
            try {

                const firstName = $filename.value;
                const file = $filename.files[0];
                const formData = new FormData();
                formData.append("filename", file);

                const uploadRes = await fetch("/api/upload/image", {
                    method: "post",
                    body: formData,
                });

                const data = await uploadRes.json();

                const res = await fetch("/api/profile/<%= user.profile.id %>", {
                method: "put",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    nickName: nickName.value,
                    thumbnail: data.url,
                    }),
                });

                if (!res.ok) {
                console.error("Error:", res.status, res.statusText);
                const errorText = await res.text(); // 오류 메시지 확인
                console.error("Response body:", errorText);
                }

                location.href = "/profile/<%= user.id %>";
            } catch (error) {
                console.error(error.message);
            }
        });

    });
        $(document).ready(function() {
            $(".hamburger-bar").click(function() {
                $("#menu, .page_cover").addClass("open");
            });

            $(".page_cover, .close").click(function() {
                $("#menu, .page_cover").removeClass("open");
            });
        });
    </script>
    </div>
</body>
</html>
