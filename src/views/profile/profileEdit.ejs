<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/static/styles/common/header.css" />
    <link rel="stylesheet" href="/static/styles/common/footer.css"/>
    <link rel="stylesheet" href="/static/styles/common/reset.css"/>
    <link rel="stylesheet" href="/static/styles/profile/profileEdit.css"/>
    <link rel="stylesheet" as="style" crossorigin href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/variable/pretendardvariable.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://kit.fontawesome.com/5a10cda3a0.js" crossorigin="anonymous"></script>
    
    <title>Document</title>
</head>
<body>
    <div class="page-container">
        <%- include('../_layouts/header') %>
    <div class="content">
        <div class="profileEdit-container" id="form">
            <h1>멋진 프로필을 만들어보세요!</h1>
            <h2>가이드에 맞춰, 프로필을 완성해 주세요</h2>
            <label for="form">
                <img src="/static/images/profile.png" alt="profile" id="profile_thumbnail">
                <input type="file" id="filename" name="filename" hidden/>
            </label>
            <div class="textbox">
                <label for="nickname">닉네임</label>
                <input type="text" id="nickname" placeholder="닉네임을 입력해주세요" class="title" value="<%= user.profile.nickName %>">
                <br>
                <label for="greeting">인사말</label>
                <textarea type="text" id="greeting" placeholder="인사말을 입력해주세요." maxlength="60" rows="1"></textarea>
            </div>
            <div class="buttonbox">
                <button class="up cancle"><a href="/profile/<%= user.id %>">취소</a></button>
                <button class="up save completeBtn"><a href="/profile/Edit/<%= user.id %>" id="btnSave" type="submit">저장</a></button>
                <!-- <button class="up save completeBtn"><a href="/profile/Edit/<%= user.id %>" aria-disabled="true">저장</a></button> -->
            </div>
        </div>
    </div>
    <%- include('../_layouts/footer') %>
    <script>
        // 프로필 수정
        async function editProfile(id, params) {
            console.log("프로필 수정 시작");
            const res = await fetch("/api/profile/${id}", {
                method: "put",
                body : JSON.stringify(params),
            });

        if (!res.ok) {
            throw new Error("프로필 수정에 실패했습니다.");
        }
        };

        // 이미지 업로드
        const $form = document.querySelector("#form");
        const $filename = document.querySelector("#filename");
        const $profileThumbnail = document.getElementById("profile_thumbnail");

        // 업로드 버튼이 사라짐 -> 이미지를 클릭했을때, 파일 선택을 띄워준다
        $profileThumbnail.addEventListener("click", () => {
            $filename.click();
        });

        // input file이 바뀌는걸 감지한다.
        $filename.addEventListener("change", (e) => {
            const file = e.target.files[0];

            // 업로드되어있는 이미지로 src를 교체한다.
            $profileThumbnail.src = URL.createObjectURL(file);
            $profileThumbnail.onload = function () {
            URL.revokeObjectURL($profileThumbnail.src);
            };
        });

        const handleSubmit = async (e) => {
            try {
            e.preventDefault();

            const firstName = e.currentTarget.firstName.value;
            const file = e.currentTarget.filename.files[0];

            const formData = new FormData();

            formData.append("filename", file);

            const uploadRes = await fetch("/api/upload/image", {
                method: "post",
                body: formData,
            });

            const data = await uploadRes.json();

            const cookies = document.cookie.split(";").reduce((acc, cookie) => {
                const [key, value] = cookie.split("=");
                acc[key.trim()] = decodeURIComponent(value);
                return acc;
            }, {});

            const token = `${cookies.accessToken}`;

            const res = await fetch("/api/users/me", {
                method: "put",
                body: JSON.stringify({
                profile: {
                    thumbnail: data.url,
                    firstName,
                },
                }),
                headers: {
                "Content-Type": "application/json",
                authorization: token,
                },
            });

            if (!res.ok) {
                throw new Error(
                "프로필 수정에 실패했습니다.",
                await res.json()["details"]
                );
                return;
            }

            alert("프로필 수정에 성공했습니다.");

            } catch (error) {
            console.error(error);
            alert(error.message);
            }

            // 수정 버튼 
            try {
                console.log("수정이벤트");
                const nickName = $form.nickName.value;
                
                await editProfile("<%= user.profile.id %>", { nickName });
                
                location.href = "/profile/<%= user.id %>";
            } catch (ex) {
                console.error(ex);
                alert("프로필 수정에 실패했습니다.", ex.message);
            }
        };


        $form.addEventListener("submit", handleSubmit);

        $(document).ready(function() {
            $(".hamburger-bar").click(function() {
                $("#menu, .page_cover").addClass("open");
            });

            $(".page_cover, .close").click(function() {
                $("#menu, .page_cover").removeClass("open");
            });
        });
    </script>
    </div>
</body>
</html>
